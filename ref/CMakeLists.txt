set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Wpedantic -O3 -std=c99 -Wconversion -Wmissing-prototypes ${EXTRA_CFLAGS}")

# sphincs+ security level definition
set(l_securitylevel 128 192 256)
set(l_robustness simple robust)

set(shake fips202.c)
set(haraka haraka.c)
set(sha2 sha2.c)
set(l_hash shake haraka sha2)
set(l_variant s f)

# build randombytes
add_library(randombytes SHARED randombytes.c)

# build nist rng
add_library(rng SHARED rng.c)
target_link_libraries(rng OpenSSL::Crypto)

set(SRCS
  address.c
  merkle.c
  wots.c
  wotsx1.c
  utils.c
  utilsx1.c
  fors.c
  sign.c
)

foreach(level IN LISTS l_securitylevel)
foreach(hash IN LISTS l_hash)
foreach(variant IN LISTS l_variant)
  set(PARAMS "sphincs-${hash}-${level}${variant}")
  foreach(robustness IN LISTS l_robustness)
    set(LIBNAME "sphincs-${hash}-${level}${variant}-${robustness}")
    set(hash_file ${${hash}} hash_${hash}.c thash_${hash}_${robustness}.c)
    add_library(${LIBNAME} SHARED ${SRCS} ${hash_file})
    target_compile_definitions(${LIBNAME} PUBLIC PARAMS=${PARAMS})
  endforeach()
endforeach()
endforeach()
endforeach()

# build PQCgenKAT_sign with the selected TARGET
add_executable(PQCgenKAT_sign PQCgenKAT_sign.c)
target_link_libraries(PQCgenKAT_sign PRIVATE rng ${TARGET})